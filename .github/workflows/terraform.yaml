name: Terraform

on:
  push:
    branches:
      - pablorusso
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # call-terraform-sandbox:
  #   uses: zencore-dev/terraform-gcp-actions-workflows/.github/workflows/terraform.yml@main
  #   secrets:
  #     GOOGLE_CREDENTIALS: ${{secrets.GOOGLE_CREDENTIALS}}
  #   with:
  #     working-directory: modules/sandbox

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      - run: echo "starting Checkout"

      - name: Checkout
        uses: actions/checkout@v3
      
      - run: echo "Log in to the Container registry"
      
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: echo "Extract metadata (tags, labels) for Docker"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - run: echo "Build and push Docker image"

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Install Helm
      #   uses: azure/setup-helm@v3
      #   with:
      #     version: v3.10.0

      # - name: packaging
      #   uses: flydiverny/helm-package-action@master
      #   with: 
      #     working-directory: ../../chart/go-redis

        # - name: upload-artifact
        #   inputs:
        #     name:
        #       description: "Artifact name"
        #       default: "artifact"
        #     path:
        #       description: "A file, directory or wildcard pattern that describes what to upload"
        #       required: true
        #     if-no-files-found:
        #       description: >
        #         The desired behavior if no files are found using the provided path.

        #         Available Options:
        #           warn: Output a warning but do not fail the action
        #           error: Fail the action with an error message
        #           ignore: Do not output any warnings or errors, the action does not fail
        #       default: "warn"
        #     retention-days:
        #       description: >
        #         Duration after which artifact will expire in days. 0 means using default retention.

        #         Minimum 1 day.
        #         Maximum 90 days unless changed from the repository settings page.
        #   runs:
        #     using: "node16"
        #     main: "dist/index.js"
        
        # - name: download-artifact
        #   description: 'Download a build artifact that was previously uploaded in the workflow by the upload-artifact action'
        #   author: 'GitHub'
        #   inputs: 
        #     name:
        #       description: 'Artifact name'
        #       required: false
        #     path:
        #       description: 'Destination path'
        #       required: false
        #   runs:
        #     using: 'node16'
        #     main: 'dist/index.js'

        # - name: deploy
        #   uses: 'deliverybot/helm@v1'
        #   env:
        #     KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
        #     SOURCE_DIR: '.'
        #     CHART_FOLDER: '../../chart/go-redis'
        #     FORCE: 'True'
        #     ARTIFACT_REGISTRY_URL: 'oci://us-west1-docker.pkg.dev/go-redis/sample/go-redis'
        #     ARTIFACT_REGISTRY_USER: '${{ secrets.ARTIFACT_REGISTRY_USER }}'
        #     ARTIFACT_REGISTRY_PASSWORD: ${{ secrets.ARTIFACT_REGISTRY_PASSWORD }}
        #   with:
        #     release: 'go-redis'
        #     namespace: 'go-redis'
        #     chart: '${{ oci://us-west1-docker.pkg.dev/go-redis/sample/go-redis }}'
        #     token: '${{ github.token }}'
        #     values: |
        #       name: foobar
        #     value-files: >-
        #     [
        #       "../../chart/go-redis/values.yaml", 
        #     ]
